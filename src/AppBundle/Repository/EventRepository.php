<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * EventRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EventRepository extends EntityRepository
{
    public function returnAppointments($start, $end, $providerId = null){
        if($providerId){//return events for specific provider
            return $this->createQueryBuilder('e')
                ->where("e.start >= :start")
                ->andWhere("e.start >= :start")
                ->andWhere("e.end <= :end")
                ->andWhere("e.type = :type")
                ->andWhere("e.provider = :providerId")
                ->leftJoin('e.provider', 'provider')
                ->setParameter('start', $start)
                ->setParameter('end', $end)
                ->setParameter('providerId', $providerId)
                ->setParameter('type', 'PATIENT_APPOINTMENT')
                ->getQuery()
                ->execute();
        }else{
            return $this->createQueryBuilder('e')
                ->where("e.start >= :start")
                ->andWhere("e.start >= :start")
                ->andWhere("e.end <= :end")
                ->andWhere("e.type = :type")
                ->leftJoin('e.provider', 'provider')
                ->setParameter('start', $start)
                ->setParameter('end', $end)
                ->setParameter('type', 'PATIENT_APPOINTMENT')
                ->getQuery()
                ->execute();
        }
    }

    public function returnEvents($start, $end, $provider = null){
        if($provider){
            return $this->createQueryBuilder('e')
                ->select("e.id", "e.title", "e.start", "e.end", "e.color", "e.phone", "e.lastname", "e.procedures", "e.type")
                ->where("e.start >= :start")
                ->andWhere("e.end <= :end")
                ->andWhere("e.provider = :provider")
                ->getQuery()
                ->setParameter('start', $start)
                ->setParameter('end', $end)
                ->setParameter('provider', $provider)
                ->getResult();
        }else{
            return $this->createQueryBuilder('e')
                ->select("e.id", "e.title", "e.start", "e.end", "e.color", "e.phone", "e.lastname", "e.procedures", "e.type")
                ->where("e.start >= :start")
                ->andWhere("e.end <= :end")
                ->getQuery()
                ->setParameter('start', $start)
                ->setParameter('end', $end)
                ->getResult();
        }

    }


}
